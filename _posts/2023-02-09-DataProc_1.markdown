---
layout: post
title: 데이터 입력, 탐색, 수정 - Python 기반의 데이터 전처리
date: 2024-02-09 10:00:00 +0900
category: Data Preprocessing
tags : [DataPreprocessing, Python,pre-process]
comments: true
use_math: true
---


본 시리즈는 앨런 비소첵 작가의 **딥러닝 데이터 전처리 입문**에 대한 정리글입니다. 책 내용에는 파이썬과 R 언어를 기반으로 데이터를 다루는 법을 설명합니다. 이 시리즈에서는 그 중에서 3장부터의 내용을 다룹니다.

# 데이터 입력, 탐색, 수정 : 1부

데이터 파일을 처리하는 과정은 문서 또는 스페리드시트를 편집하는 과정과 유사하다. (파일을 열어 분석한 후 수정하고 결과를 저장하기 때문에)
파이썬에서 데이터 파일을 처리하는 일은 프로그래밍 도구를 사용하면 정보의 처리 과정을 더 세밀하게 조율할 수 있다. 

이 프로그래밍 도구를 설계 및 코딩하는 접근법은 아래의 데이터의 종류에 따라서 달라진다.
- __매우 많은__ 양의 데이터를 처리해야 할 때
- __계층 구조__ 의 데이터를 처리해야 할 때 
- __불분명한__ 데이터를 처리해야 할 때
- 데이터를 재구성해야 하거나 __형식을 변경__ 해야할 때
- __비정형 데이터__ 에서 텍스트 본문과 같은 정보를 추출해야 할 때


아래의 항목과 같이, 일반적이고 간단한 데이터를 다루는 작업은 알려진 프로그래밍 도구를 사용할 수 있다. 이 경우 데이터 처리 작업이 더 간결하고 빠름.
- __데이터 항목__ 에 존재하는 값을 이용해 데이터 항목의 __사용 여부 결정__
- 변수의 __선택__ 과 __추출__
- __조건을 만족__ 하는 변수의 값을 합산
- 변수의 값을 처리해 __새 변수 생성__

이 장에서는 원시 데이터에 다소 가까운 관점에서 데이터 처리과정을 살펴본다.

<br/>


<br/>


<br/>

## __외부 리소스__
이 책에서 다루는 방법은 어렵기때문에, 인터넷 자원을 활용해 학습을 원할히 진행할 수 있도록 구성됨. (2023년 2월 기준, 참고로 책에서 제공된 외부 자료 링크는 막혀서 사용할수 없다.)


<br/>


## __이번장 살펴보기__
이 장에서는 process_data.py 프로그램을 사용. 이 프로그램은 JSON 파일을 읽어서 일부 변수를 추출한 후 데이터셋을 생성하고 새로운 JSON 파일에 기록한다. 

### 설치요구사항
이 장에서의 예제를 살펴보기 위해서, 다음 프로그램을 설치하자. 책에서는 파이썬 IDE대신에 atom (깃허브가 제작한 오픈소스 텍스트 에디터)를 추천했다.

- 파이썬 IDE
- 파이썬 최신버전

### 데이터
일반적인 사건의 문제 보고서를 지방 정부에 전달하는 플랫폼인 Seeclickfix의 데이터셋을 사용. 다운로드는 다음 링크에서 받을 수 있다.
[다운로드 링크]()

### 파일시스템 설정
데모를 실행하려면, ch3라는 이름의 파이썬 프로젝트를 생성해야한다.
ch3 폴더에서 이번장에서 사용할 코드와 데이터셋을 작업하게된다. 데이터 폴더에 scf_data.json이라는 이름의 데이터셋 파일을 복사하자.

```
ch3
-->process_data.py
-->process_data2.py
-->data/
----> scf_data.json
```

<br/>


## __기본 데이터 처리 작업 흐름 소개__ 

데이터 파일 처리과정에서의 기본작업 흐름
1. 프로그램에서 입력데이터가 기록된 파일 열기
2. 파일에서 데이터를 읽어 프로그램에 입력하기
    - 데이터를 프로그램이 처리할 수 있는 적절한 데이터 구조로 변경
3. 파일 내용 탐색하기
    - 데이터 검수
4. 파일 내용 수정하기
    - 최종사용을 위한 데이터 정리
    - 데이터 처리
5. 수정된 데이터를 새파일에 기록하기



<br/>


## __JSON 파일 형식 소개__

### 데이터 형식


스프레드시트 :
- 표 형식의 데이터셋, 행과 열로 구성되어있음
- 각 열은 데이터 변수고, 각 행은 데이터 항목이다.

JSON :
- 계층 데이터 형식
- 파이썬의 딕셔너리(키, 값으로 구성) 및 리스트(순서가 있는 값)와 동일한 형태를 갖는 두 개의 구조로 구성돼 있음. 이 두가지 형식은 서로 중접해 사용할 수 있다.


